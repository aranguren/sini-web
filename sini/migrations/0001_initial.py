# Generated by Django 3.2.6 on 2023-07-06 18:07

import ckeditor_uploader.fields
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApiGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre grupo')),
            ],
            options={
                'verbose_name': 'Grupos API',
                'verbose_name_plural': 'Grupos API',
                'db_table': 'sini_api_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ApiUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha creado')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Fecha modificado')),
                ('name', models.CharField(max_length=254, verbose_name='Nombre y apellidos')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('token_fcm', models.CharField(blank=True, max_length=254, null=True, verbose_name='Token')),
                ('password', models.CharField(blank=True, default='usuario', max_length=250, null=True)),
                ('password_str', models.CharField(blank=True, max_length=50, null=True, verbose_name='Password STR')),
                ('active', models.BooleanField(default=False, verbose_name='Activo?')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='usuarios', to='sini.apigroup', verbose_name='Grupo')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Usuario API',
                'verbose_name_plural': 'Usuarios API',
                'db_table': 'sini_api_user',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BlacklistedToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.TextField(verbose_name='Token')),
                ('blacklisted_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha')),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Token',
                'db_table': 'sini_api_blacklisted_token',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Incidence',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha creado')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Fecha modificado')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('active', models.BooleanField(default=True, verbose_name='Activo?')),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='Localización')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre')),
                ('incidence_type', models.CharField(choices=[('accidente_aereo', 'Accidente aéreo'), ('accidente_transito', 'Accidente de tránsito'), ('colapso_puente', 'Alerta por colapso de puente'), ('arbol_caido', 'Árbo caído'), ('asfixia_inmersion', 'Asfixia por inmersión'), ('aumento_cauce', 'Aumento de cauce'), ('aumento_caudal', 'Aumento  de caudal')], default='tipo1', max_length=50, verbose_name='Tipo incidente')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('status', models.CharField(choices=[('creado', 'Creado'), ('finalizado', 'Finalizado')], default='creado', max_length=50, verbose_name='Status')),
                ('image1', models.ImageField(upload_to='incidencia_fotos', verbose_name='Foto 1')),
                ('image2', models.ImageField(upload_to='incidencia_fotos', verbose_name='Foto 2')),
                ('image3', models.ImageField(upload_to='incidencia_fotos', verbose_name='Foto 3')),
                ('audio', models.FileField(upload_to='incidencia_audioa', verbose_name='Audio')),
                ('video', models.FileField(upload_to='incidencia_video', verbose_name='Video')),
                ('priority', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='Prioridad')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Incidencia',
                'verbose_name_plural': 'Incidencias',
                'db_table': 'sini_incidence',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MobileWarning',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha creado')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Fecha modificado')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('active', models.BooleanField(default=True, verbose_name='Activo?')),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='Localización')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre')),
                ('incidence_type', models.CharField(choices=[('accidente_aereo', 'Accidente aéreo'), ('accidente_transito', 'Accidente de tránsito'), ('colapso_puente', 'Alerta por colapso de puente'), ('arbol_caido', 'Árbo caído'), ('asfixia_inmersion', 'Asfixia por inmersión'), ('aumento_cauce', 'Aumento de cauce'), ('aumento_caudal', 'Aumento  de caudal')], default='tipo1', max_length=50, verbose_name='Tipo incidente')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('status', models.CharField(choices=[('creado', 'Creado'), ('asignado', 'Asignado'), ('descartado', 'Descartado')], default='creado', max_length=50, verbose_name='Status')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='aviso_fotos', verbose_name='Foto 1')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='aviso_fotos', verbose_name='Foto 2')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='aviso_fotos', verbose_name='Foto 3')),
                ('audio', models.FileField(blank=True, null=True, upload_to='aviso_audios', verbose_name='Audio')),
                ('video', models.FileField(blank=True, null=True, upload_to='aviso_video', verbose_name='Video')),
                ('creation_origin', models.CharField(choices=[('api', 'API'), ('web', 'WEB')], default='api', max_length=50, verbose_name='Creado desde')),
                ('assign_incidence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='mobile_warnings', to='sini.incidence', verbose_name='Incidencia asignada')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('created_by_api_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='+', to='sini.apiuser', verbose_name='Creado por (Usuario Móvil)')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
                ('modified_by_api_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='+', to='sini.apiuser', verbose_name='Modificado por (Usuario Móvil)')),
            ],
            options={
                'verbose_name': 'Aviso',
                'verbose_name_plural': 'Avisos',
                'db_table': 'sini_warning',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Advice',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha creado')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Fecha modificado')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=254, verbose_name='Nombre')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('advice', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Consejo')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Consejo',
                'verbose_name_plural': 'Consejos',
                'db_table': 'sini_advice',
                'managed': True,
            },
        ),
    ]
